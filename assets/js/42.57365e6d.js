(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{442:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"require-和-import-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require-和-import-区别"}},[t._v("#")]),t._v(" require 和 import 区别")]),t._v(" "),a("h3",{attrs:{id:"_1-require-是运行时加载-import-是编译时加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-require-是运行时加载-import-是编译时加载"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("require")]),t._v(" 是运行时加载，"),a("code",[t._v("import")]),t._v(" 是编译时加载")]),t._v(" "),a("p",[t._v("运行时加载的意思是只有运行到这行代码的时候，才会去加载。")]),t._v(" "),a("p",[t._v("以下 "),a("code",[t._v("require")]),t._v("的用法是 ok 的，因为"),a("code",[t._v("require")]),t._v(" 是运行时加载，运行到 "),a("code",[t._v("require")]),t._v("命令的时候， "),a("code",[t._v("demoPath")]),t._v("已经有了结果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" demoPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demoPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("以下 "),a("code",[t._v("import")]),t._v("的用法是错误的，因为"),a("code",[t._v("import")]),t._v(" 是编译时加载，代码没运行，无法知道"),a("code",[t._v("demoPath")]),t._v("的运行结果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" demoPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from demoPath \n")])])]),a("p",[t._v("假设 "),a("code",[t._v("demo.js")]),t._v("里只有一行打印，以下代码的执行顺序是先执行"),a("code",[t._v("demo.js")]),t._v('里的打印，再打印 "abc"。还是因为'),a("code",[t._v("import")]),t._v(" 是编译时加载，"),a("code",[t._v("import")]),t._v("命令被提升到整个代码的头部。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),t._v(" \n")])])]),a("h3",{attrs:{id:"_2-关于import-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-关于import-函数"}},[t._v("#")]),t._v(" 2. 关于"),a("code",[t._v("import()函数")])]),t._v(" "),a("p",[t._v('import 函数是支持动态引入。以下代码是 ok 的，执行顺序是先打印 "abc"，再执行'),a("code",[t._v("demo.js")]),t._v("里的打印")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" demoPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demoPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-import-支持按需引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-import-支持按需引入"}},[t._v("#")]),t._v(" 3. import 支持按需引入")]),t._v(" "),a("p",[t._v("如下代码，希望按钮点击的时候动态引入文件。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("btn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法1：demo.js 将打入主包")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法2：demo.js 将打入主包")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法3：demo.js 将单独打包成一个文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./demo.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在使用 webpack 打包的时候，不做特殊处理的话，写法 1 和 写法 2 都将把 "),a("code",[t._v("demo.js")]),t._v("打入主包，只有写法 3 能实现按需引入 —— 即点击按钮的时候，控制台才发起请求，去请求打包后的 demo.js 文件。")])])}),[],!1,null,null,null);s.default=n.exports}}]);