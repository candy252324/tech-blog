(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{516:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"代码提交前自动格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码提交前自动格式化"}},[t._v("#")]),t._v(" 代码提交前自动格式化")]),t._v(" "),a("p",[t._v("我们希望提交到远端的代码都是 "),a("code",[t._v("lint")]),t._v(" 通过并且 "),a("code",[t._v("prettier")]),t._v(" 过的。")]),t._v(" "),a("p",[t._v("安装 "),a("a",{attrs:{href:"https://www.npmjs.com/package/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[t._v("lint-staged"),a("OutboundLink")],1),t._v(",它只将暂存区的 git 文件交给 lint 进行检查。")]),t._v(" "),a("p",[a("code",[t._v("yarn add lint-staged -D")])]),t._v(" "),a("p",[a("code",[t._v("/.husky/pre-commit")]),t._v(" 脚本里命令设置为"),a("code",[t._v("yarn lint-stated")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" -- "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" lint-staged\n")])])]),a("p",[t._v("package.json 中添加需要格式化的文件和命令")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{ts,js,tsx,jsx,vue}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 格式化成功则自动执行 git add")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{ts,js,tsx,jsx,vue,less,css}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("以上配置，当提交代码时，"),a("code",[t._v("pre-commit")]),t._v("触发，执行"),a("code",[t._v("lint-stated")]),t._v("，"),a("code",[t._v("lint-stated")]),t._v(" 将暂存区匹配后缀的文件进行 "),a("code",[t._v("eslint --fix")]),t._v(" 和 "),a("code",[t._v("prettier --write")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"本项目使用的-husky-和-lint-staged-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本项目使用的-husky-和-lint-staged-版本"}},[t._v("#")]),t._v(" 本项目使用的 husky 和 lint-staged 版本")]),t._v(" "),a("h4",{attrs:{id:"husky-版本-2-3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky-版本-2-3-0"}},[t._v("#")]),t._v(" husky 版本 2.3.0")]),t._v(" "),a("p",[t._v("由于个人不想在项目目录下添加这个 "),a("code",[t._v(".husky/_")]),t._v(" 文件夹，只想在 "),a("code",[t._v("package.json")]),t._v(" 里简单配置一下，所以本项目决定使用一个低版本的 "),a("code",[t._v("husky")]),t._v(" —— 2.3.0。(肯定还有其它版本或方式可以用，这里不想思考了，就用 2.3.0 版本了）")]),t._v(" "),a("p",[a("code",[t._v("husky uninstall")]),t._v(" // 如果之前不小心装了更高版本的 "),a("code",[t._v("husky")]),t._v("， 先移除")]),t._v(" "),a("p",[a("code",[t._v("yarn add husky@2.3.0 -D")])]),t._v(" "),a("h4",{attrs:{id:"lint-staged-版本-8-1-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lint-staged-版本-8-1-7"}},[t._v("#")]),t._v(" lint-staged 版本 8.1.7")]),t._v(" "),a("p",[t._v("刚开始装的是 13.x 的 "),a("code",[t._v("lint-staged")]),t._v("，出现的问题是，即使只改了一行代码，控制台也会输出大量信息，看着像是对所有文件进行了 lint，而非仅修改文件。后面改成了 "),a("code",[t._v("8.1.7")]),t._v(" 版本后，输出信息就正常了。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/imgs/zeroToOne/lint-staged-output-message.png")}}),t._v(" "),a("p",[t._v("最终的 package.json 配置如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{ts,js,tsx,jsx,vue}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{ts,js,tsx,jsx,vue,less,css}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);