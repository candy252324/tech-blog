(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{508:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"输出路径配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出路径配置"}},[t._v("#")]),t._v(" 输出路径配置")]),t._v(" "),a("p",[t._v("期望最后生成的 dist 文件目录结构如下，即所有的资源都放到 static 目录下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dist\n|- index.html\n|- main.js\n|- /static\n  |- /js\n    |- a.js\n    |- b.js\n    |- c.js\n  |- /css\n    |- a.css\n    |- b.css\n  |- /img\n    |- a.png\n    |- b.jpg\n")])])]),a("p",[t._v("修改 "),a("code",[t._v("output.chunkFilename")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[name].js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主入口 js 文件名称，也可以写死成 main.js")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("chunkFilename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static/js/[name]-[id].js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步加载的模块名称")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("output.chunkFilename")]),t._v(" ，这个配置影响的是异步加载的 js 模块名称，比如使用"),a("code",[t._v("import()")]),t._v("函数导入的模块（vue 中路由配置经常使用"),a("code",[t._v("import()")]),t._v("加载模块）。")]),t._v(" "),a("p",[t._v("这里文件名称配置成"),a("code",[t._v("[name]-[id].js")]),t._v("的格式，其中 "),a("code",[t._v("[name]")]),t._v(" 是通过"),a("code",[t._v('/* webpackChunkName: "xxx" */')]),t._v("注释的形式手动设置的。")]),t._v(" "),a("p",[t._v("举个例子，如下代码，希望点击按钮的时候执行"),a("code",[t._v("loadCount")]),t._v("函数，从而动态加载一个文件：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("loadCount")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "count" */')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./components/count.vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("最终打包结果如下图所示，可以看到，除了主入口 main.js 之外，"),a("code",[t._v("dist/static/js")]),t._v("路径下还生成了"),a("code",[t._v("count-800.js")]),t._v("文件。")]),t._v(" "),a("img",{staticStyle:{transform:"scale(0.8)"},attrs:{src:t.$withBase("/imgs/zeroToOne/outputPath.png")}}),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("static/css")]),t._v("目录的生成是因为使用了"),a("code",[t._v("mini-css-extract-plugin")]),t._v("插件，这个插件会将 vue 里的 css 抽离。\n"),a("code",[t._v("static/img")]),t._v("目录的生成是因为图片资源配置了"),a("code",[t._v("generator.filename")]),t._v("。这些在后面的 loader 章节中会讲。")])]),t._v(" "),a("p",[t._v("点击按钮，触发"),a("code",[t._v("loadCount")]),t._v("函数执行，这个时候可以看到浏览器发起了两个请求：\n"),a("img",{staticStyle:{transform:"scale(0.8)"},attrs:{src:t.$withBase("/imgs/zeroToOne/outputPath2.png")}})])])}),[],!1,null,null,null);s.default=e.exports}}]);